# This workflow is used for publishing the Node.js package.
#
# Releases are triggered manually. This can be done by browsing to
# https://github.com/CycloneDX/cyclonedx-node-module/actions?query=workflow%3ARelease
# and selecting "Run workflow". If releasing a patch for a previous version
# make sure the correct branch is selected. It will default to the default
# branch.
#
# You will also need to specify the version level increment for this release.
#
# Supported levels are major, minor and patch. Semantic versioning should be
# followed. i.e. major if the release includes breaking changes, minor for
# non-breaking changes with additional functionality and patch for bug fixes and
# dependency updates.
#
# You will also need to specify a value for the related commit message.
name: Release

on:
  workflow_dispatch:
    inputs:
      versionLevel:
        description: 'Version level (must be one of major, minor, patch)'
        required: true
      commitMessage:
        description: 'Release/commit message'
        required: true

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2.3.4

    - name: Setup Node.js
      uses: actions/setup-node@v2.5.0
      with:
        node-version: 12.x

    - name: Configure Git
      run: |
        git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        git config --local user.name "${GITHUB_ACTOR}"

    - name: Build & Publish
      id: build
      run: |
        echo Version level: ${{ github.event.inputs.versionLevel }}
        npm ci
        npm run build --if-present
        VERSION=$(npm version ${{ github.event.inputs.versionLevel }} --message "${{ github.event.inputs.commitMessage }}")
        VERSION=${VERSION:1} # remove 'v' prefix
        echo "##[set-output name=version;]$VERSION"
        git push --follow-tags
        npm config set //registry.npmjs.org/:_authToken=$NODE_AUTH_TOKEN
        npm publish --access public
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Publish Docker image to Docker Hub
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      run: |
        REPO=cyclonedx/cyclonedx-node
        VERSION=${{ steps.build.outputs.version }}
        docker login --username $DOCKERHUB_USERNAME --password "$DOCKERHUB_TOKEN"
        docker build -f Dockerfile -t $REPO:$VERSION -t $REPO:latest .
        docker push $REPO:latest
        docker push $REPO:$VERSION