# For details of what checks are run for PRs please refer below
# docs: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions

name: Node CI

on: 
  push:
    branches: ["master"]
  pull_request:
  workflow_dispatch:


env:
  CI: "true"
  REPORTS_DIR: CI_reports

jobs:
  test:
    name: Test (node${{ matrix.node-version }}, ${{ matrix.os }})
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "windows-latest", "macos-latest"]
        node-version: 
          # action based on https://github.com/actions/node-versions/releases
          # see also: https://nodejs.org/en/about/releases/
          - "16"  # active LTS
          - "14"
          - "12"  # lowest supported
    env:
      REPORTS_ARTIFACT: tests-reports
    steps:
      - name: Checkout
        # see https://github.com/actions/checkout
        uses: actions/checkout@v2.4.0
      - name: dir setup
        run: mkdir ${{ env.REPORTS_DIR }}
      - name: Setup Node.js ${{ matrix.node-version }}
        ## see https://github.com/actions/setup-node
        uses: actions/setup-node@v2.5.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"
      - name: install project
        run: npm ci
      - name: install testing-project
        run: npm ci
        working-directory: tests/with-packages
      - name: run tests
        run: >
          npm run test --
          --ci
          --no-cache
          --all
          --reporters=default
          --reporters=jest-junit
          --coverage
          --coverageDirectory="$JEST_COVERAGE_OUTPUT_DIR"
          --coverageReporters="text"
          --coverageReporters="clover"
        env:
          JEST_COVERAGE_OUTPUT_DIR: ${{ env.REPORTS_DIR }}/${{ matrix.os }}_${{ matrix.node-version }}
          ## see https://www.npmjs.com/package/jest-junit
          JEST_JUNIT_OUTPUT_DIR: ${{ env.REPORTS_DIR }}/${{ matrix.os }}_${{ matrix.node-version }}
          JEST_JUNIT_OUTPUT_NAME: junit.xml
      - name: try to buil project
        run: npm run build --if-present
      - name: Artifact reports
        if: ${{ ! cancelled() }}
        # see https://github.com/actions/upload-artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.REPORTS_ARTIFACT }}
          path: ${{ env.REPORTS_DIR }}
          if-no-files-found: error
